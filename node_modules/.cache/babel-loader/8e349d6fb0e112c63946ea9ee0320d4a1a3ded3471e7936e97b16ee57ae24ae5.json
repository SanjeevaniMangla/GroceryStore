{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Home from './Home.vue';\nimport Notification from './Notification.vue';\nexport default {\n  name: 'Bookings',\n  components: {\n    Home,\n    Notification\n  },\n  data() {\n    return {\n      bookings: [],\n      current_booking: null,\n      showRatingModal: false,\n      rating: null,\n      errorMessages: [],\n      serverErrorMessages: [],\n      isSubmitButtonClicked: false\n    };\n  },\n  mounted() {\n    this.fetchBookings();\n  },\n  methods: {\n    openratingModal(booking) {\n      this.showRatingModal = true;\n      this.current_booking = booking;\n    },\n    closeRatingModal() {\n      this.showRatingModal = false;\n      this.current_booking = null;\n    },\n    async submitRating() {\n      this.isSubmitButtonClicked = true;\n      let message = \"Rating is not valid\";\n      if (this.errorMessages.includes(message)) {\n        if (this.rating === null || this.rating === \"\" || this.rating === undefined || this.rating < 0 || this.rating > 10) {\n          return;\n        } else {\n          this.errorMessages = this.errorMessages.filter(errorMessage => errorMessage !== message);\n        }\n      } else {\n        if (this.rating === null || this.rating === \"\" || this.rating === undefined || this.rating < 0 || this.rating > 10) {\n          this.errorMessages.push(message);\n        } else {}\n      }\n      const user_id = parseInt(localStorage.getItem('userId'));\n      const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category/${this.current_booking.category_id}/product/${this.current_booking.product_id}/booking/${this.current_booking.id}/rating_api`, {\n        method: \"POST\",\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rating: this.rating\n        })\n      }).then(async result => {\n        const data = await result.json();\n        if (result.ok) {\n          this.bookings = data;\n          this.$store.commit('setNotification', {\n            variant: 'success',\n            message: 'Rating has been successfully given!!!'\n          });\n          this.closeRatingModal();\n          await this.fetchBookings();\n        } else if (result.status === 409) {} else {\n          this.$store.commit('setNotification', {\n            variant: 'error',\n            message: 'Something went wrong. Try again!!!'\n          });\n        }\n      });\n    },\n    async fetchBookings() {\n      const user_id = parseInt(localStorage.getItem('userId'));\n      const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/booking_api`, {\n        method: \"GET\",\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      }).then(async result => {\n        const data = await result.json();\n        if (result.ok) {\n          this.bookings = data;\n        } else if (result.status === 409) {} else {\n          this.$store.commit('setNotification', {\n            variant: 'error',\n            message: 'Something went wrong. Try again!!!'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Home","Notification","name","components","data","bookings","current_booking","showRatingModal","rating","errorMessages","serverErrorMessages","isSubmitButtonClicked","mounted","fetchBookings","methods","openratingModal","booking","closeRatingModal","submitRating","message","includes","undefined","filter","errorMessage","push","user_id","parseInt","localStorage","getItem","response","fetch","category_id","product_id","id","method","headers","Authorization","body","JSON","stringify","then","result","json","ok","$store","commit","variant","status"],"sources":["src/components/Bookings.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Home />\r\n        <div class=\"bookings-container\">\r\n            <div v-for=\"(booking, index) in bookings\" :key=\"index\" class=\"booking-card\">\r\n                <div class=\"booking-info\">\r\n                    <div class=\"booking-row\">\r\n                        <div class=\"left-info\">\r\n                            Number of Products: {{ booking.number_of_products }}\r\n                        </div>\r\n                        <div class=\"center-info\">\r\n                            Total Price: {{ booking.total_price }}\r\n                        </div>\r\n                        <div class=\"right-info\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"booking-row\">\r\n                        <div class=\"left-info\">\r\n                            \r\n                        </div>\r\n                        <div class=\"center-info\">\r\n                            \r\n                        </div>\r\n                        <div class=\"right-info\">\r\n                            <b-button v-if=\"!booking.is_rating_given\" @click=\"openratingModal(booking)\" variant=\"primary\" class=\"rate-button\">Rate</b-button>\r\n                            <b-modal id=\"rating-modal\" v-model=\"showRatingModal\" size=\"sm\" title=\"Rating\" no-close-on-backdrop>\r\n                                <div id=\"rating-error-message\" v-if=\"(errorMessages.length > 0 || serverErrorMessages.length > 0) && isSubmitButtonClicked\" class=\"category-error-message\">\r\n                                    <ul>\r\n                                        <template v-if=\"errorMessages.length > 0\">\r\n                                            <li v-for=\"errorMessage in errorMessages\" :key=\"errorMessage\">{{ errorMessage }}</li>\r\n                                        </template>\r\n                                        <template v-else-if=\"serverErrorMessages.length > 0\">\r\n                                            <li v-for=\"serverErrorMessage in serverErrorMessages\" :key=\"serverErrorMessage\">{{ serverErrorMessage }}</li>\r\n                                        </template>\r\n                                    </ul>\r\n                                </div>\r\n                                <label for=\"rating\">Rating (out of 10):</label>\r\n                                <input type=\"number\" id=\"rating\" class=\"form-control\" v-model=\"rating\" />\r\n                                <template #modal-footer>\r\n                                    <b-button class=\"primary\" v-on:click=\"submitRating()\">Submit</b-button>\r\n                                    <b-button @click=\"closeRatingModal\">Close</b-button>\r\n                                </template>\r\n                            </b-modal>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"booking-row\">\r\n                        <div class=\"left-info\">\r\n                            Product Name: {{ booking.product_name }}\r\n                        </div>\r\n                        <div class=\"center-info\">\r\n                            Category Name: {{ booking.category_name }}\r\n                        </div>\r\n                        <div class=\"right-info\">\r\n                            <!-- Empty space for better alignment -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Home from './Home.vue'\r\nimport Notification from './Notification.vue'\r\n\r\nexport default {\r\n    name: 'Bookings',\r\n    components: {\r\n        Home, Notification\r\n    },\r\n    data() {\r\n        return {\r\n            bookings: [],\r\n            current_booking: null,\r\n            showRatingModal: false,\r\n            rating: null,\r\n            errorMessages: [],\r\n            serverErrorMessages: [],\r\n            isSubmitButtonClicked: false\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchBookings();\r\n    },\r\n    methods: {\r\n        openratingModal(booking){\r\n            this.showRatingModal = true\r\n            this.current_booking = booking;\r\n        },\r\n        closeRatingModal(){\r\n            this.showRatingModal = false;\r\n            this.current_booking = null;\r\n        },\r\n        async submitRating(){\r\n            this.isSubmitButtonClicked = true;\r\n            let message = \"Rating is not valid\";\r\n            if (this.errorMessages.includes(message)) {\r\n                if(this.rating === null || this.rating === \"\" || this.rating === undefined || this.rating < 0 || this.rating > 10){\r\n                    return;\r\n                }\r\n                else{\r\n                    this.errorMessages = this.errorMessages.filter((errorMessage) => errorMessage !== message);\r\n                }\r\n            }\r\n            else{\r\n                if(this.rating === null || this.rating === \"\" || this.rating === undefined || this.rating < 0 || this.rating > 10){\r\n                    this.errorMessages.push(message);\r\n                }\r\n                else{\r\n                    \r\n                }\r\n            }\r\n            const user_id = parseInt(localStorage.getItem('userId'));\r\n            const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category/${this.current_booking.category_id}/product/${this.current_booking.product_id}/booking/${this.current_booking.id}/rating_api`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('access_token'),\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    rating: this.rating\r\n                })\r\n            }).then(async result => {\r\n                const data = await result.json();\r\n                if (result.ok) {\r\n                    this.bookings = data;\r\n                    this.$store.commit('setNotification', { variant: 'success', message: 'Rating has been successfully given!!!' });\r\n                    this.closeRatingModal();\r\n                    await this.fetchBookings();\r\n                }\r\n                else if (result.status === 409) {\r\n\r\n                }\r\n                else {\r\n                    this.$store.commit('setNotification', { variant: 'error', message: 'Something went wrong. Try again!!!' });\r\n                }\r\n            })\r\n        },\r\n        async fetchBookings() {\r\n            const user_id = parseInt(localStorage.getItem('userId'));\r\n            const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/booking_api`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('access_token'),\r\n                }\r\n            }).then(async result => {\r\n                const data = await result.json();\r\n                if (result.ok) {\r\n                    this.bookings = data;\r\n                }\r\n                else if (result.status === 409) {\r\n\r\n                }\r\n                else {\r\n                    this.$store.commit('setNotification', { variant: 'error', message: 'Something went wrong. Try again!!!' });\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.bookings-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    max-height: 1000px; \r\n    overflow-y: auto;\r\n}\r\n\r\n.booking-card {\r\n    border: 1px solid #ccc;\r\n    margin: 10px;\r\n    width: 100%;\r\n    background-color: rgb(200, 223, 68);\r\n}\r\n\r\n.booking-info {\r\n    padding: 10px;\r\n}\r\n\r\n.left-info {\r\n    flex: 1;\r\n}\r\n\r\n.center-info {\r\n    flex: 1;\r\n    text-align: center;\r\n}\r\n\r\n.booking-row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgb(97, 224, 97);\r\n    align-items: center; /* Align items vertically in the center */\r\n}\r\n\r\n.right-info {\r\n    flex: 1;\r\n    text-align: right;\r\n}\r\n\r\n.rate-button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px; /* Increase padding for wider button */\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: background-color 0.3s ease;\r\n    width: 100px;\r\n}\r\n\r\n.rate-button:hover {\r\n    background-color: #0056b3;\r\n}\r\n#rating-error-message {\r\n  width: 265px;\r\n  margin-top: -15px;\r\n  border-color: black; \r\n  border: 2px solid black;\r\n}\r\n\r\n#rating-error-message ul {\r\n  color: white;\r\n  background-color: lightcoral;\r\n  padding: 10px;\r\n  margin: 0;\r\n  list-style-type: none;\r\n}\r\n</style>"],"mappings":";AAgEA,OAAAA,IAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,IAAA;IAAAC;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,eAAA;MACAC,eAAA;MACAC,MAAA;MACAC,aAAA;MACAC,mBAAA;MACAC,qBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,gBAAAC,OAAA;MACA,KAAAT,eAAA;MACA,KAAAD,eAAA,GAAAU,OAAA;IACA;IACAC,iBAAA;MACA,KAAAV,eAAA;MACA,KAAAD,eAAA;IACA;IACA,MAAAY,aAAA;MACA,KAAAP,qBAAA;MACA,IAAAQ,OAAA;MACA,SAAAV,aAAA,CAAAW,QAAA,CAAAD,OAAA;QACA,SAAAX,MAAA,kBAAAA,MAAA,gBAAAA,MAAA,KAAAa,SAAA,SAAAb,MAAA,aAAAA,MAAA;UACA;QACA,OACA;UACA,KAAAC,aAAA,QAAAA,aAAA,CAAAa,MAAA,CAAAC,YAAA,IAAAA,YAAA,KAAAJ,OAAA;QACA;MACA,OACA;QACA,SAAAX,MAAA,kBAAAA,MAAA,gBAAAA,MAAA,KAAAa,SAAA,SAAAb,MAAA,aAAAA,MAAA;UACA,KAAAC,aAAA,CAAAe,IAAA,CAAAL,OAAA;QACA,OACA,CAEA;MACA;MACA,MAAAM,OAAA,GAAAC,QAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,+BAAAL,OAAA,kBAAAnB,eAAA,CAAAyB,WAAA,iBAAAzB,eAAA,CAAA0B,UAAA,iBAAA1B,eAAA,CAAA2B,EAAA;QACAC,MAAA;QACAC,OAAA;UACAC,aAAA,cAAAT,YAAA,CAAAC,OAAA;UACA;QACA;QACAS,IAAA,EAAAC,IAAA,CAAAC,SAAA;UACA/B,MAAA,OAAAA;QACA;MACA,GAAAgC,IAAA,OAAAC,MAAA;QACA,MAAArC,IAAA,SAAAqC,MAAA,CAAAC,IAAA;QACA,IAAAD,MAAA,CAAAE,EAAA;UACA,KAAAtC,QAAA,GAAAD,IAAA;UACA,KAAAwC,MAAA,CAAAC,MAAA;YAAAC,OAAA;YAAA3B,OAAA;UAAA;UACA,KAAAF,gBAAA;UACA,WAAAJ,aAAA;QACA,OACA,IAAA4B,MAAA,CAAAM,MAAA,WAEA,OACA;UACA,KAAAH,MAAA,CAAAC,MAAA;YAAAC,OAAA;YAAA3B,OAAA;UAAA;QACA;MACA;IACA;IACA,MAAAN,cAAA;MACA,MAAAY,OAAA,GAAAC,QAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,+BAAAL,OAAA;QACAS,MAAA;QACAC,OAAA;UACAC,aAAA,cAAAT,YAAA,CAAAC,OAAA;QACA;MACA,GAAAY,IAAA,OAAAC,MAAA;QACA,MAAArC,IAAA,SAAAqC,MAAA,CAAAC,IAAA;QACA,IAAAD,MAAA,CAAAE,EAAA;UACA,KAAAtC,QAAA,GAAAD,IAAA;QACA,OACA,IAAAqC,MAAA,CAAAM,MAAA,WAEA,OACA;UACA,KAAAH,MAAA,CAAAC,MAAA;YAAAC,OAAA;YAAA3B,OAAA;UAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}