{"ast":null,"code":"import Home from './Home.vue';\nimport Notification from './Notification.vue';\nimport { BDropdown, BDropdownItem } from 'bootstrap-vue';\nexport default {\n  name: 'Summary',\n  components: {\n    Home,\n    Notification,\n    BDropdown,\n    BDropdownItem\n  },\n  data() {\n    return {\n      categories: [],\n      current_category: null,\n      productsSoldImage: '',\n      averageRatingsImage: '',\n      totalPricesImage: '',\n      showImages: false,\n      averageRatingsImageName: ''\n    };\n  },\n  mounted() {\n    this.fetchCategories();\n  },\n  methods: {\n    async fetchCategories() {\n      const user_id = parseInt(localStorage.getItem('userId'));\n      const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category_api`, {\n        method: \"GET\",\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      }).then(async result => {\n        const data = await result.json();\n        if (result.ok) {\n          this.categories = data.categories;\n        } else if (result.status === 409) {} else {\n          this.$store.commit('setNotification', {\n            variant: 'error',\n            message: 'Something went wrong. Try again!!!'\n          });\n        }\n      });\n    },\n    async selectCategory(category) {\n      this.showImages = false;\n      this.current_category = category;\n      const user_id = parseInt(localStorage.getItem('userId'));\n      const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category/${this.current_category.id}/summary_api`, {\n        method: \"GET\",\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n      if (response.ok) {\n        this.showImages = true;\n      } else if (result.status === 409) {} else {\n        this.$store.commit('setNotification', {\n          variant: 'error',\n          message: 'Something went wrong. Try again!!!'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Home","Notification","BDropdown","BDropdownItem","name","components","data","categories","current_category","productsSoldImage","averageRatingsImage","totalPricesImage","showImages","averageRatingsImageName","mounted","fetchCategories","methods","user_id","parseInt","localStorage","getItem","response","fetch","method","headers","Authorization","then","result","json","ok","status","$store","commit","variant","message","selectCategory","category","id"],"sources":["src/components/Summary.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Home/>\r\n        <div class=\"summary-container\">\r\n            <h1>Select Category</h1>\r\n            <div class=\"search-input\">\r\n                <b-dropdown id=\"category-dropdown\" :text=\"current_category ? current_category.name : 'Select Category'\" variant=\"outline-success\">\r\n                    <b-dropdown-item v-for=\"category in categories\" :key=\"category.id\" :value=\"category.name\" @click=\"selectCategory(category)\">\r\n                        {{ category.name }}\r\n                    </b-dropdown-item>\r\n                </b-dropdown>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <div v-if=\"showImages\" class=\"summary-images\">\r\n                <div class=\"image-container\">\r\n                    <img src=\"../assets/summary/category_1_products_sold.png\" class=\"image\" />\r\n                </div>\r\n                <div class=\"image-container\">\r\n                    <img src=\"../assets/summary/category_1_average_ratings.png\" class=\"image\" />\r\n                </div>\r\n                <div class=\"image-container\">\r\n                    <img src=\"../assets/summary/category_total_prices.png\" class=\"image\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Home from './Home.vue'\r\nimport Notification from './Notification.vue'\r\nimport { BDropdown, BDropdownItem } from 'bootstrap-vue';\r\n\r\nexport default {\r\n    name: 'Summary',\r\n    components: {\r\n        Home, Notification, BDropdown, BDropdownItem\r\n    },\r\n    data() {\r\n        return {\r\n            categories: [],\r\n            current_category: null,\r\n            productsSoldImage: '',\r\n            averageRatingsImage: '',\r\n            totalPricesImage: '',\r\n            showImages: false,\r\n            averageRatingsImageName: ''\r\n        };\r\n    },\r\n    mounted(){ \r\n        this.fetchCategories(); \r\n    },\r\n    methods: {\r\n        async fetchCategories() {\r\n            const user_id = parseInt(localStorage.getItem('userId'));\r\n            const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category_api`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('access_token'),\r\n                }\r\n            }).then(async result => {\r\n                const data = await result.json();\r\n                if (result.ok) {\r\n                    this.categories = data.categories;\r\n                }\r\n                else if (result.status === 409) {\r\n\r\n                }\r\n                else {\r\n                    this.$store.commit('setNotification', { variant: 'error', message: 'Something went wrong. Try again!!!' });\r\n                }\r\n            })\r\n        },\r\n        async selectCategory(category) {\r\n            this.showImages=false;\r\n            this.current_category = category;\r\n            const user_id = parseInt(localStorage.getItem('userId'));\r\n            const response = await fetch(`http://127.0.0.1:5000/user/${user_id}/category/${this.current_category.id}/summary_api`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('access_token'),\r\n                }\r\n            });\r\n            if (response.ok) {\r\n                this.showImages = true;\r\n            }\r\n            else if (result.status === 409) {\r\n\r\n            }\r\n            else {\r\n                this.$store.commit('setNotification', { variant: 'error', message: 'Something went wrong. Try again!!!' });\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style >\r\n\r\n.summary-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    height: 100vh;\r\n    padding-top: 20px;\r\n}\r\n\r\n.search-input {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n}\r\n\r\n.summary-images {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n}\r\n\r\n.image-container {\r\n    margin: 10px;\r\n    border: 1px solid #ccc; /* Add border to the image container */\r\n}\r\n\r\n.image {\r\n    max-width: 100%;\r\n    height: auto;\r\n    border: 5px solid #dd1313; /* Add border to the image */\r\n}\r\n\r\n\r\n</style>"],"mappings":"AA8BA,OAAAA,IAAA;AACA,OAAAC,YAAA;AACA,SAAAC,SAAA,EAAAC,aAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,IAAA;IAAAC,YAAA;IAAAC,SAAA;IAAAC;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,gBAAA;MACAC,iBAAA;MACAC,mBAAA;MACAC,gBAAA;MACAC,UAAA;MACAC,uBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACA,MAAAD,gBAAA;MACA,MAAAE,OAAA,GAAAC,QAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,+BAAAL,OAAA;QACAM,MAAA;QACAC,OAAA;UACAC,aAAA,cAAAN,YAAA,CAAAC,OAAA;QACA;MACA,GAAAM,IAAA,OAAAC,MAAA;QACA,MAAArB,IAAA,SAAAqB,MAAA,CAAAC,IAAA;QACA,IAAAD,MAAA,CAAAE,EAAA;UACA,KAAAtB,UAAA,GAAAD,IAAA,CAAAC,UAAA;QACA,OACA,IAAAoB,MAAA,CAAAG,MAAA,WAEA,OACA;UACA,KAAAC,MAAA,CAAAC,MAAA;YAAAC,OAAA;YAAAC,OAAA;UAAA;QACA;MACA;IACA;IACA,MAAAC,eAAAC,QAAA;MACA,KAAAxB,UAAA;MACA,KAAAJ,gBAAA,GAAA4B,QAAA;MACA,MAAAnB,OAAA,GAAAC,QAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,+BAAAL,OAAA,kBAAAT,gBAAA,CAAA6B,EAAA;QACAd,MAAA;QACAC,OAAA;UACAC,aAAA,cAAAN,YAAA,CAAAC,OAAA;QACA;MACA;MACA,IAAAC,QAAA,CAAAQ,EAAA;QACA,KAAAjB,UAAA;MACA,OACA,IAAAe,MAAA,CAAAG,MAAA,WAEA,OACA;QACA,KAAAC,MAAA,CAAAC,MAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}