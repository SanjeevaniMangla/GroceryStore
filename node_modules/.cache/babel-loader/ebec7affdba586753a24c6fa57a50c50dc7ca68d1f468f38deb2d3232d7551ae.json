{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './routers';\nimport store from './vuex';\nimport { BootstrapVue } from 'bootstrap-vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport VueRouter from 'vue-router';\nVue.use(BootstrapVue);\nVue.use(VueRouter);\n\n// Check for the token and expiry time in local storage\nconst access_token = localStorage.getItem('access_token');\nconst expiryTime = localStorage.getItem('expiryTime');\nconst selectedRole = localStorage.getItem('selectedRole');\nif (access_token && expiryTime && Date.now() > new Date(expiryTime)) {\n  // Token has expired, perform logout\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('expiryTime');\n  store.commit('setAuthentication', {\n    isAuthenticated: false\n  });\n  store.commit('setToken', {\n    access_token: null\n  });\n} else if (access_token && expiryTime && Date.now() < new Date(expiryTime)) {\n  // If the token exists and is not expired, update the Vuex store with the authentication status\n  store.commit('setAuthentication', {\n    isAuthenticated: true\n  });\n  store.commit('setToken', {\n    access_token\n  });\n  store.commit('setExpiryTime', {\n    expiryTime\n  });\n  store.commit('setRole', {\n    userRole: selectedRole\n  });\n} else {\n  store.commit('setAuthentication', {\n    isAuthenticated: false\n  });\n  store.commit('setToken', {\n    access_token: null\n  });\n}\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","BootstrapVue","VueRouter","use","access_token","localStorage","getItem","expiryTime","selectedRole","Date","now","removeItem","commit","isAuthenticated","userRole","render","h","$mount"],"sources":["C:/Users/Dell/OneDrive/Documents/Project Root Folder/appdev/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './routers'\nimport store from './vuex'\nimport { BootstrapVue } from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport VueRouter from 'vue-router'\n\nVue.use(BootstrapVue);\nVue.use(VueRouter);\n\n\n// Check for the token and expiry time in local storage\nconst access_token = localStorage.getItem('access_token');\nconst expiryTime = localStorage.getItem('expiryTime');\nconst selectedRole = localStorage.getItem('selectedRole');\n\nif (access_token && expiryTime && Date.now() > new Date(expiryTime)) {\n  // Token has expired, perform logout\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('expiryTime');\n  store.commit('setAuthentication', { isAuthenticated: false });\n  store.commit('setToken', { access_token: null });\n} else if (access_token && expiryTime && Date.now() < new Date(expiryTime)) {\n  // If the token exists and is not expired, update the Vuex store with the authentication status\n  store.commit('setAuthentication', { isAuthenticated: true });\n  store.commit('setToken', { access_token });\n  store.commit('setExpiryTime', { expiryTime });\n  store.commit('setRole', { userRole: selectedRole });\n}\nelse{\n  store.commit('setAuthentication', { isAuthenticated: false});\n  store.commit('setToken', {access_token: null});\n}\n\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,QAAQ;AAC1B,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAO,kCAAkC;AACzC,OAAO,sCAAsC;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAElCL,GAAG,CAACM,GAAG,CAACF,YAAY,CAAC;AACrBJ,GAAG,CAACM,GAAG,CAACD,SAAS,CAAC;;AAGlB;AACA,MAAME,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AACzD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;AACrD,MAAME,YAAY,GAAGH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAEzD,IAAIF,YAAY,IAAIG,UAAU,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAID,IAAI,CAACF,UAAU,CAAC,EAAE;EACnE;EACAF,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;EACvCN,YAAY,CAACM,UAAU,CAAC,YAAY,CAAC;EACrCX,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE;IAAEC,eAAe,EAAE;EAAM,CAAC,CAAC;EAC7Db,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE;IAAER,YAAY,EAAE;EAAK,CAAC,CAAC;AAClD,CAAC,MAAM,IAAIA,YAAY,IAAIG,UAAU,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAID,IAAI,CAACF,UAAU,CAAC,EAAE;EAC1E;EACAP,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE;IAAEC,eAAe,EAAE;EAAK,CAAC,CAAC;EAC5Db,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE;IAAER;EAAa,CAAC,CAAC;EAC1CJ,KAAK,CAACY,MAAM,CAAC,eAAe,EAAE;IAAEL;EAAW,CAAC,CAAC;EAC7CP,KAAK,CAACY,MAAM,CAAC,SAAS,EAAE;IAAEE,QAAQ,EAAEN;EAAa,CAAC,CAAC;AACrD,CAAC,MACG;EACFR,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE;IAAEC,eAAe,EAAE;EAAK,CAAC,CAAC;EAC5Db,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE;IAACR,YAAY,EAAE;EAAI,CAAC,CAAC;AAChD;AAGA,IAAIP,GAAG,CAAC;EACNE,MAAM;EACNC,KAAK;EACLe,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAClB,GAAG;AACpB,CAAC,CAAC,CAACmB,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}